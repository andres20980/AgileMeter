version: '3'

services:
  agilemeter_jenkins:
    image: jenkinsonar.azurecr.io/jenkinsonar:latest
    container_name: agilemeter_jenkins 
    build: ./jenkins
    hostname: jenkins
    environment:  
      #JAVA_OPTS: "-Djava.awt.headless=true"  
      JAVA_OPTS: "-Djenkins.install.runSetupWizard=false" # Start jenkins unlocked
      JENKINS_HOME: "/var/jenkins_home"
    ports:
      - 8082:8080
      - 50002:50000
    expose:
      - 8082
      - 50002
    volumes:
      - ./jenkins/volumes/users:/var/jenkins_home/users
      - ./jenkins/volumes/jobs:/var/jenkins_home/jobs
      - ./jenkins/configs/credentials/credentials.xml:/var/jenkins_home/credentials.xml
      #- ./jenkins/configs/credentials/.ssh:/root/.ssh/
      - ./jenkins/configs/credentials/.ssh/:/var/jenkins_home/.ssh/
      - ./jenkins/volumes/home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    networks: 
      - sonarnet
  db:
    container_name: agilemeter_postgres
    image: postgres
    expose:
      - 5432
    ports:
      - 5432:5432
    networks:
      - sonarnet
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
    #volumes:
    #  - pgdata:/var/lib/postgresql/data
  sonarqube:
    container_name: agilemeter_sonarqube 
    depends_on: 
      - db
    image: sonarqube:lts
    build: 
      context: ./sonarqube
      dockerfile: Dockerfile
    expose:
      - 9001
    ports:
      - 9001:9000
    networks: 
      - sonarnet
    environment:
      - SONARQUBE_JDBC_URL=jdbc:postgresql://db:5432/sonar
      - SONARQUBE_JDBC_USERNAME=sonar
      - SONARQUBE_JDBC_PASSWORD=sonar
#    command: "-Dsonar.search.javaAdditionalOpts=-Dnode.store.allow_mmapfs=false"
    volumes:
     - ./sonarqube/conf:/opt/sonarqube/conf
     - ./sonarqube/data:/opt/sonarqube/data
    # - ./sonarqube/extensions/plugins:/opt/sonarqube/extensions/plugins
    # - ./sonarqube/bundled-plugins:/opt/sonarqube/lib/bundled-plugins
networks:
  sonarnet:
#volumes:
#  pgdata:
#    external: true