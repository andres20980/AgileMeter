<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.33">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.3.9"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.3.9">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.72">
    <script>pipeline {
    agent{
        label{
            label &apos;&apos;
        }
    }
	stages {
	    stage(&apos;Clean workspace&apos;){
	        steps{
	            println &apos;Se limpia el workspace&apos;
                cleanWs()
	        }
	    }
	    stage(&apos;Donwload Source&apos;) {
        	steps {
        	    script{
        	        sh &apos;/usr/bin/git clone ssh://git@steps.everis.com:766/INNOVASEV/ScrumMeter.git -b Development&apos;
        	        sh &apos;chown -R jenkins:jenkins $WORKSPACE/ScrumMeter/&apos;
        	    }
        	}
    	}
    	stage(&apos;Install package and build&apos;){
    	    steps{
    	        script{
    	            sh &apos;dotnet build $WORKSPACE/ScrumMeter/everisapi.API/&apos;
    	        }
    	    }
    	}
    	stage(&apos;Build test&apos;){
    	    steps{
    	        script{
    	            
    	            sh &apos;dotnet add $WORKSPACE/ScrumMeter/everisapiTest/everisapiTest.csproj package  dotnet-reportgenerator-cli --version 4.2.2&apos;
    	            sh &apos;dotnet build $WORKSPACE/ScrumMeter/everisapiTest/&apos;
    	        }
    	    }
    	}
    	stage(&apos;Execute test&apos;){
    	    steps{
    	        script{
    	            sh &apos;dotnet test $WORKSPACE/ScrumMeter/everisapiTest/everisapiTest.csproj /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:CoverletOutput=&quot;$WORKSPACE/ScrumMeter/everisapiTest/TestResult/&quot; /p:Exclude=&quot;[xunit*]*&quot;&apos;
    	            sh &apos;cd $WORKSPACE/ScrumMeter/everisapiTest/ &amp;&amp; dotnet reportgenerator everisapiTest.csproj &quot;-reports:./TestResult/coverage.opencover.xml&quot; -targetdir:&quot;./TestResults/Reports&quot; -reporttypes:HTML&apos;
    	        }
    	    }
    	}
    	stage(&apos;Sonarqube&apos;) {
            steps {
                script{
                    sh &apos;cd $WORKSPACE/ScrumMeter &amp;&amp; dotnet restore&apos;
                    sh &apos;pwd&apos;
                    sh &apos;cd $WORKSPACE/ScrumMeter &amp;&amp; dotnet sonarscanner begin /k:&quot;AgileMeter&quot; /d:sonar.host.url=&quot;http://sonarqube:9000&quot; /d:sonar.login=&quot;931a6181cf7c0c6830854da5d48714dcb9ffddb7&quot; /d:sonar.language=&quot;cs&quot;&apos;
                    sh &apos;cd $WORKSPACE/ScrumMeter &amp;&amp; dotnet build&apos;
                    sh &apos;cd $WORKSPACE/ScrumMeter &amp;&amp; dotnet sonarscanner end /d:sonar.login=&quot;931a6181cf7c0c6830854da5d48714dcb9ffddb7&quot;&apos;
                }
            }
        }
    }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>